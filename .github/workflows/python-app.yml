# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  dependencies:
    runs-on: ubuntu-latest
    concurrency:
      group: "some-group-name"  
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./example-app/.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}  # Klucz zale≈ºny od pliku poetry.lock
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Install dependencies with Poetry
      run: |
        poetry install --no-root

  static-tests:
    runs-on: ubuntu-latest
    needs: dependencies  
    concurrency:
      group: "some-group-name"  
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./example-app/.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Install dependencies with Poetry
      run: |
        poetry install --no-root

    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Security checks with bandit
      run: |
        poetry add bandit
        poetry run bandit -r .

    - name: Format check with black
      run: |
        poetry add black
        poetry run black --check .

 
  unit-tests:
    runs-on: ubuntu-latest
    needs: dependencies  
    concurrency:
      group: "some-group-name"  
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./example-app/.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Install dependencies with Poetry
      run: |
        poetry install --no-root

    - name: Run unit tests with pytest
      run: |
        poetry run pytest

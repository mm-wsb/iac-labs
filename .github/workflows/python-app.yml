name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-dependencies:
    concurrency:
      group: dependencies-group
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        #working-directory: ./example-app
        shell: bash
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/<repository_name>/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry (Linux)
      if: runner.os != 'Windows'
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry --version
    - name: Install Poetry (Windows)
      if: runner.os == 'Windows'
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo 'C:\Users\runneradmin\AppData\Roaming\Python\Scripts' | Out-File -Append $Env:GITHUB_PATH
        poetry --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  static-code-analysis:
    concurrency:
      group: static-analysis-group
    needs: build-dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/<repository_name>/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install flake8
      run: pip install flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  unit-tests:
    concurrency:
      group: unit-tests-group
    needs: build-dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/<repository_name>/example-app/.venv
        key: ${{ runner.os }}-venv
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install pytest
      run: pip install pytest
    - name: Test with pytest
      run: pytest
